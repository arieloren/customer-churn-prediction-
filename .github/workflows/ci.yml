name: CI

on:
  push:            # run on every push to any branch
    branches: [ "**" ]
  pull_request:    # and on every PR

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    # (optional) DB service so tests that open a connection don't fail
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: churn
          POSTGRES_PASSWORD: churn_pwd
          POSTGRES_DB: churn_db
        ports: [5432:5432]
        options: >-
          --health-cmd="pg_isready -U churn -d churn_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # 1. Checkout code
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      # 2. Set up Python & install deps
      - name:  Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name:  Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 3. Run tests
      - name:  Run pytest
        run: pytest -q

      # 4. Build every Docker image in docker-compose to prove Dockerfiles compile
      - name:  docker compose build
        run: docker compose -f docker-compose.yml build

# ------------------------------------------------
# .github/workflows/ci.yml  –  push-images job only
push-images:
  needs: test-and-build
  runs-on: ubuntu-latest

  steps:
    - uses: actions/checkout@v4

    # Build the two images with the final names from docker-compose.yml
    - name: 🐳 Build images
      run: docker compose -f docker-compose.yml build churn-api batch-runner

    # Log in to Docker Hub
    - name: 🔐 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Push both images (no extra tagging needed)
    - name: 🚀 Push images to Docker Hub
      run: |
        docker push arieloren/churn-api:latest
        docker push arieloren/churn-batch:latest
